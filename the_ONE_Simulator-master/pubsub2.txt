## Scenario settings
Scenario.name = CS_DTW
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 259200
#Scenario.endTime = 274883 
#25920010000
#Scenario.endTime = 172800
#Scenario.endTime = 604800

####################################

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 10

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000

###################################################

# Define 6 different node groups
Scenario.nrofHostGroups = 1

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement

#ROUTER
################################################################ ROUTER

# Common settings for all groups
Group.movementModel = WorkingDayMovement
Group.workDayLength = 28800
Group.nrOfOffices = 10
Group.officeSize = 100
Group.officeWaitTimeParetoCoeff = 0.5
Group.officeMinWaitTime = 10
Group.officeMaxWaitTime = 20
Group.timeDiffSTD = 7200
Group.nrOfMeetingSpots = 5
Group.minGroupSize = 1
Group.maxGroupSize = 3
Group.probGoShoppingAfterWork = 0.5
Group.shoppingControlSystemNr = 2
Group.maxAfterShoppingStopTime = 200
Group.minAfterShoppingStopTime = 100
Group.ownCarProb = 1
Group.busControlSystemNr = 1
Group2.shoppingControlSystemNr = 1
Group2.meetingSpotsFile=data/HelsinkiMedium/A_meetingspots.wkt
Group2.officeLocationsFile=data/HelsinkiMedium/A_offices.wkt
Group2.homeLocationsFile=data/HelsinkiMedium/A_homes.wkt

//setings clustermovement
#Group1.movementModel = ClusterMovement
#Group1.clusterCenter = 100, 100
#Group1.nrofHosts = 10
#Group1.clusterRange = 100
#Group2.movementModel = ClusterMovement
#Group2.clusterCenter = 600,600
#Group2.clusterRange = 100
#Group2.nrofHosts = 10
#Group3.movementModel = ClusterMovement
#Group3.clusterCenter = 1000,1000
#Group3.clusterRange = 100
#Group3.nrofHosts = 10
#Group.movementModel = ExternalMovement
#ExternalMovement.file = ee/scenarioDAKU2.one


#Group.router = EpidemicRouter
Group.router = DecisionEngineRouter
DecisionEngineRouter.decisionEngine = contentKu.ContentSubsDTW

Group.bufferSize = 5M
Group.waitTime = 0, 900
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
# 1 day = 1440mnt 10 day = 14400mnt #14hr = 20160 
Group.msgTtl = 300
#Group.msgTtl = 360
#Group.msgTtl = 1440
#Group.msgTtl = 14400

Group.nrofHosts = 50

# group1 (pedestrians) specific settings
Group1.groupID = p

#EVENT
######################################### EVENT

## Message creation parameters 
# How many event generators
Events.nrof = 2
#Events1.class = KontenGene
Events1.class = KontenGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events1.interval = 7200,17280
Events1.interval = 1660, 2660
#Events1.interval = 2500, 3000
#Events1.interval = 2160
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# Events1.size = 500k
# range of message source/destination addresses
Events1.hosts = 0,89
# Message ID prefix
Events1.prefix = C
Events1.time = 18000, 259200 

#Events2.class = SubscribeGene
Events2.class = SubscribeGenerator
#Events2.interval = 10800
#Events2.interval = 2160
Events2.interval = 1000
Events2.size =  1k
Events2.hosts = 0,89
Events2.prefix = S
Events2.time = 18000, 259200 

#MOVEMENT
######################################### MOVEMENT

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
#MovementModel.worldSize = 1200, 1200
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

#REPORT
######################################## REPORT

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 7
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/Sk_DTW

# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = CreatedMessagesReport
Report.report3 = KontenMessageReport
Report.report4 = SubscribeMessageReport
Report.report5 = UtilandEfiReport
Report.report6 = LatencyReport
Report.report7 = Util4


# GUI underlay image settings
GUI.UnderlayImage.fileName = data/grid3.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 5, 10
# Scaling factor for the image
GUI.UnderlayImage.scale = 1.00
# Image rotation (radians)
GUI.UnderlayImage.rotate = 0
