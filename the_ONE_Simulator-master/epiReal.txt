## Scenario settings
Scenario.name = Epi
Scenario.simulateConnections = true
Scenario.updateInterval = 1
# 43200s == 12h
Scenario.endTime = 604800
#274883 Haggle
#8490908 Reality
####################################

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 10

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 1000

###################################################

# Define 6 different node groups
Scenario.nrofHostGroups = 1

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement

#ROUTER
################################################################ ROUTER

# Common settings for all groups
Group.movementModel = RandomWaypoint
#Group.movementModel = StationaryMovement
#Group.nodeLocation = 10,10

#Group.router = EpidemicRouter
Group.router = DecisionEngineRouter
DecisionEngineRouter.decisionEngine = EpidemicDecisionRouter
#DecisionEngineRouter.decisionEngine = contentKu.ContentSubs2

Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 360
# 360= 6jm
# 1440 = 1hr
# 14400 = 10hr
# 20160 = 2 weeks

Group.nrofHosts = 40

# group1 (pedestrians) specific settings
Group1.groupID = p

#EVENT
######################################### EVENT

## Message creation parameters 
# How many event generators
Events.nrof = 1
#Events1.class = ExternalEventsQueue
#Events1.filePath = RealityConnectionTraceFinal.txt

#Events2.class = MessageEventGenerator
#Events2.interval = 14400, 18000
#1660, 2660
#Events2.size = 250k,300k
#Events2.hosts = 0,96
#Events2.prefix = C

Events1.class = MessageEventGenerator
Events1.interval = 1160, 1240
#1660, 2660
Events1.size = 250k,300k
Events1.hosts = 0,39
Events1.prefix = M

#MOVEMENT
######################################### MOVEMENT

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
#MovementModel.worldSize = 4500, 3400
MovementModel.worldSize = 1000, 1000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

#REPORT
######################################## REPORT

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/Sk_Epi
# Report classes to load
Report.report1 = MessageStatsReport
#Report.report2 = CreatedMessagesReport
#Report.report3 = KontenMessageReport
#Report.report4 = SubscribeMessageReport
#Report.report5 = LatencyReport
#Report.report5 = Util3
#Report.report6 = UtilandEfiReport

